A language is accepted by an NFA iff it is accepted by a DFA

A - set of states in NFA

E(A) - all states that follow from states in A with ε transitions

Q` = P(Q)

δ` : P(Q) x Σ -> P(Q)

δ`(A, a) = E( U δ(X, a))
	     x∈A

F` : {A ∈ P(Q) | A ∩ F != ∅}



Theorem:
The class of regular languages is closed under the regular operations:

Union, concat, star

"U"

L1 is accepted by NFA M1 = (Q1, Σ1, δ1, q01, F1)
L2 is accepted by NFA M2 = (Q2, Σ2, δ2, q02, F2)

Define M = (Q, Σ, δ, q0, F)

Q = Q1 U Q2 U {q0}
Σ
q0 = q0
F = F1 U F2

δ(q, a) = {

∅ : q = q0, a ∈ Σ

{q01, q02} : q = q0, a = ε

δ1(q, a) : q ∈ Q1, a ∈ Σq

δ2(q, a) : q ∈ Q2, a ∈ Σq


"∘"

L1 is accepted by some NFA, M1 = (Q1, Σ1, δ1, q01, F1)
L2 is accepted by some NFA, M2 = (Q2, Σ2, δ2, q02, F2)

Make ε transitions from the final states of M1 to the start state of M2. Also make final states of M1 no longer accepting

Q = Q1 U Q2

q0 = q01

F = F2

δ(q, a) = {

δ(q, a) : q ∈ (Q1\F1), a ∈ Σ

δ1(q, a) : q ∈ F1, a ∈ Σ

{q02} U δ1(q, a) : q ∈ F1, a = ε

}

"*"