1
instance Pretty Robot
--pretty :: Robot -> String
pretty (Mov x r) = "f" ++ x ++ ", " ++ (pretty r)
pretty (Rt r) = "r, " ++ (pretty r)
pretty (Lt r) = "l, " ++ (pretty r)
pretty Stop = "stop"

2
check :: (Eq a, Pretty a) ⇒ Parser a → String → Bool
check p s = parsed == parse p (pretty (fst (head parsed)))
	where 
		parsed = (parse p s)

data While = While Stms
data Stms = StmsMulti Stms Stms
	| StmsSingle Stm
data Stm = StmSkip
	| StmVar Var Aexp
	| StmPar Stms
	| StmIf Bexp Stm Stm
	| StmWhile Bexp Stm
data Axep = Add Aexp Aexp
	| Sub Aexp Aexp
	| Term Aterm
data Aterm = Mul Aterm Aterm
	| Atom
data Atom = AtomNum Num
	| AtomVar Var
	| AtomExp Aexp
data Bexp = And Bexp Bexp
	| Term Bterm
data Bterm = Not Bterm
	| BtermTom Btom
data Btom = Leq Aexp Aexp
	| Beq Aexp Aexp
	| BtomTrue
	| BtomFalse
	| BtomPar Bexp
data Num = Int
data Var = String

5
